#!/usr/bin/env python
# coding=utf-8

import math

# 相关常量定义
A = 0.236          # 盖板面积
m_g1 = 2.11        # 盖板1质量
m_g2 = 2.11        # 盖板2质量
C_g1 = 900         # 盖板1比热容
C_g2 = 900         # 盖板2比热容
G = 0              # 表面太阳光辐照度
a_g1 = 0.06        # 盖板1吸收率
a_g2 = 0.06        # 盖板2吸收率
h_w_g1 = 148.2     # 盖板1与水之间的对流传热系数
h_w_g2 = 148.2     # 盖板2与水之间的对流传热系数

m_w = 0.0467
C_w = 4174
a_w = 0.2          # 水的吸收率
R_g1 = 0.04        # 玻璃盖板1的反射率

h_c_g2 = 899.3     # 盖板2与电池之间的传热系数

n = 100            # 循环次数
T_a = (1,2,3,4)    # 环境温度 
V = (1,2,3,4)      # 风速
T_in = (1,1,1,1)   # 进水口水的温度
h_a_g1[0] = 1      # 盖板1与环境之间的对流传热系数
T_g1[0] = 0        # 盖板1温度的初始值
T_g2[0] = 0        # 盖板2温度的初始值
T_w[0] = 0         # 水槽中的水温

# 盖板与环境之间的辐射换热量
def cal_q_r_g1(T_a, T_g1):
    '''
    T_a : 环境温度
    T_g1: 盖板温度
    '''
    T_a_4 = T_a ** 4
    T_g1_4 = T_g1 ** 4
    q_r_gl = 0.236 * 0.9 * 5.67 * (10 ** -8) * (0.33 * (T_a_4 - T_g1_4) + 0.9 * ((0.0552 * (T_a ** 1.5)) ** 4 - T_g1_4) + 0.067 * (T_a_4 - T_g1_4))
    return q_r_gl

# 盖板与环境之间的对流传热系数
def cal_h_a_g1(T_g1, T_a, V):
    '''
    T_a : 环境温度
    T_g1: 盖板温度
    V   : 风速
    '''
    h_a_g1 = math.sqrt(2.15 * (T_g1 - T_a) ** (2/3) + (2.38 * V ** 0.89) ** 2)
    return h_a_g1

# 模型
for i in range(0, 100):
    # 盖板与环境之间的对流传热系数
    h_a_g1[i] = cal_h_a_g1(T_g1[i-1], T_a[i], V[i])

    # 盖板与环境之间的辐射换热量
    q_r_gl[i] = cal_q_r_g1(T_a[i], T_g1[i])

    # 玻璃盖板1的能量平衡方程 
    T_g1[i + 1] = T_g1[i] + (G * A * a_g1 + h_a_g1[i] * A (T_a[i] - T_g1[i]) + h_w_g1 * A * (T_w[i] - T_g1[i]) + q_r_gl[i]) * 10 / (m_g1 * C_g1)

    # 水的能量平衡方程
    mCT_in_out[i] = (h_w_g1 * A * (T_g1[i] - T_w[i]) + h_w_g2 * A * (T_g2[i] - T_in[i]) + 0.94 * G * A * (1 - R_g1) * a_w) * 10

    # 玻璃盖板2的能量平衡方程
    T_g2[i+1] = T_g2[i] + (h_w_g2 * A * (T_in[i] - T_g2[i]) + h_c_g2 * A * (T_a[i] - T_g2[i]) + 0.43 * G * A) * 10 / (m_g2 * C_g2)

    # 光伏电池层能量平衡


